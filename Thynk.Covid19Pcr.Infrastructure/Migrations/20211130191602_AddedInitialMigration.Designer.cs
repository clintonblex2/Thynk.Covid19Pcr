// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thynk.Covid19Pcr.Infrastructure.DbContexts;

namespace Thynk.Covid19Pcr.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211130191602_AddedInitialMigration")]
    partial class AddedInitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.AvailableTestDays", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AvailableDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("OpenSlots")
                        .HasColumnType("int");

                    b.Property<long>("TestLabId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TestLabId");

                    b.ToTable("AvailableTestDays");

                    b.HasData(
                        new
                        {
                            Id = 2L,
                            AvailableDate = new DateTime(2021, 12, 1, 20, 16, 1, 750, DateTimeKind.Local).AddTicks(7859),
                            CreatedBy = "Gilbert_Jerde",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 756, DateTimeKind.Local).AddTicks(7838),
                            OpenSlots = 77,
                            TestLabId = 4L
                        },
                        new
                        {
                            Id = 3L,
                            AvailableDate = new DateTime(2021, 12, 1, 20, 16, 1, 750, DateTimeKind.Local).AddTicks(7859),
                            CreatedBy = "Everett_Feeney",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 756, DateTimeKind.Local).AddTicks(7838),
                            OpenSlots = 100,
                            TestLabId = 7L
                        },
                        new
                        {
                            Id = 4L,
                            AvailableDate = new DateTime(2021, 12, 1, 20, 16, 1, 750, DateTimeKind.Local).AddTicks(7859),
                            CreatedBy = "David45",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 756, DateTimeKind.Local).AddTicks(7838),
                            OpenSlots = 92,
                            TestLabId = 5L
                        },
                        new
                        {
                            Id = 5L,
                            AvailableDate = new DateTime(2021, 12, 1, 20, 16, 1, 750, DateTimeKind.Local).AddTicks(7859),
                            CreatedBy = "Marion.Cole60",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 756, DateTimeKind.Local).AddTicks(7838),
                            OpenSlots = 72,
                            TestLabId = 10L
                        },
                        new
                        {
                            Id = 6L,
                            AvailableDate = new DateTime(2021, 12, 1, 20, 16, 1, 750, DateTimeKind.Local).AddTicks(7859),
                            CreatedBy = "Allison_Davis67",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 756, DateTimeKind.Local).AddTicks(7838),
                            OpenSlots = 72,
                            TestLabId = 7L
                        },
                        new
                        {
                            Id = 7L,
                            AvailableDate = new DateTime(2021, 12, 1, 20, 16, 1, 750, DateTimeKind.Local).AddTicks(7859),
                            CreatedBy = "Andre.West32",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 756, DateTimeKind.Local).AddTicks(7838),
                            OpenSlots = 68,
                            TestLabId = 11L
                        },
                        new
                        {
                            Id = 8L,
                            AvailableDate = new DateTime(2021, 12, 1, 20, 16, 1, 750, DateTimeKind.Local).AddTicks(7859),
                            CreatedBy = "Misty.Corwin57",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 756, DateTimeKind.Local).AddTicks(7838),
                            OpenSlots = 66,
                            TestLabId = 4L
                        },
                        new
                        {
                            Id = 9L,
                            AvailableDate = new DateTime(2021, 12, 1, 20, 16, 1, 750, DateTimeKind.Local).AddTicks(7859),
                            CreatedBy = "Pearl.Wunsch",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 756, DateTimeKind.Local).AddTicks(7838),
                            OpenSlots = 67,
                            TestLabId = 10L
                        },
                        new
                        {
                            Id = 10L,
                            AvailableDate = new DateTime(2021, 12, 1, 20, 16, 1, 750, DateTimeKind.Local).AddTicks(7859),
                            CreatedBy = "Sophia32",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 756, DateTimeKind.Local).AddTicks(7838),
                            OpenSlots = 89,
                            TestLabId = 1L
                        },
                        new
                        {
                            Id = 11L,
                            AvailableDate = new DateTime(2021, 12, 1, 20, 16, 1, 750, DateTimeKind.Local).AddTicks(7859),
                            CreatedBy = "Kristopher_Frami",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 756, DateTimeKind.Local).AddTicks(7838),
                            OpenSlots = 95,
                            TestLabId = 1L
                        });
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.Patients", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PhoneNumber", "Email");

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Age = 0,
                            CreatedBy = "Henry.Fisher",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 834, DateTimeKind.Local).AddTicks(9461),
                            DateOfBirth = new DateTime(2001, 1, 4, 16, 17, 56, 482, DateTimeKind.Local).AddTicks(8725),
                            Email = "Henry.Fisher@yahoo.com",
                            FirstName = "Dulce",
                            Gender = "Female",
                            LastName = "Klocko",
                            PhoneNumber = "07009771037"
                        },
                        new
                        {
                            Id = 2L,
                            Age = 0,
                            CreatedBy = "Daniel40",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 834, DateTimeKind.Local).AddTicks(9461),
                            DateOfBirth = new DateTime(1997, 4, 16, 14, 45, 36, 621, DateTimeKind.Local).AddTicks(2898),
                            Email = "Daniel97@gmail.com",
                            FirstName = "Wallace",
                            Gender = "Female",
                            LastName = "Haley",
                            PhoneNumber = "07070090011"
                        },
                        new
                        {
                            Id = 3L,
                            Age = 0,
                            CreatedBy = "Manuel.Emard",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 834, DateTimeKind.Local).AddTicks(9461),
                            DateOfBirth = new DateTime(1997, 2, 25, 6, 29, 29, 912, DateTimeKind.Local).AddTicks(2777),
                            Email = "Manuel_Emard55@hotmail.com",
                            FirstName = "Maximo",
                            Gender = "Male",
                            LastName = "Gutmann",
                            PhoneNumber = "07084927225"
                        },
                        new
                        {
                            Id = 4L,
                            Age = 0,
                            CreatedBy = "Jay_Cormier",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 834, DateTimeKind.Local).AddTicks(9461),
                            DateOfBirth = new DateTime(1955, 11, 26, 7, 42, 50, 84, DateTimeKind.Local).AddTicks(4896),
                            Email = "Jay.Cormier65@gmail.com",
                            FirstName = "Rhea",
                            Gender = "Female",
                            LastName = "Hodkiewicz",
                            PhoneNumber = "07067074236"
                        },
                        new
                        {
                            Id = 5L,
                            Age = 0,
                            CreatedBy = "Margaret.Collins80",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 834, DateTimeKind.Local).AddTicks(9461),
                            DateOfBirth = new DateTime(1984, 5, 11, 20, 49, 38, 557, DateTimeKind.Local).AddTicks(5476),
                            Email = "Margaret_Collins@hotmail.com",
                            FirstName = "Grady",
                            Gender = "Female",
                            LastName = "Wilkinson",
                            PhoneNumber = "07059435826"
                        },
                        new
                        {
                            Id = 6L,
                            Age = 0,
                            CreatedBy = "Tracy.Cole66",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 834, DateTimeKind.Local).AddTicks(9461),
                            DateOfBirth = new DateTime(1987, 2, 21, 16, 45, 31, 685, DateTimeKind.Local).AddTicks(3170),
                            Email = "Tracy.Cole@gmail.com",
                            FirstName = "Clara",
                            Gender = "Male",
                            LastName = "Cassin",
                            PhoneNumber = "07027265594"
                        },
                        new
                        {
                            Id = 7L,
                            Age = 0,
                            CreatedBy = "Isabel.Mraz",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 834, DateTimeKind.Local).AddTicks(9461),
                            DateOfBirth = new DateTime(1982, 12, 4, 11, 59, 44, 61, DateTimeKind.Local).AddTicks(1442),
                            Email = "Isabel59@gmail.com",
                            FirstName = "Finn",
                            Gender = "Male",
                            LastName = "Wunsch",
                            PhoneNumber = "07063623449"
                        },
                        new
                        {
                            Id = 8L,
                            Age = 0,
                            CreatedBy = "Trevor_Runolfsson",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 834, DateTimeKind.Local).AddTicks(9461),
                            DateOfBirth = new DateTime(1969, 10, 3, 19, 26, 40, 557, DateTimeKind.Local).AddTicks(9577),
                            Email = "Trevor32@gmail.com",
                            FirstName = "Tristian",
                            Gender = "Male",
                            LastName = "Auer",
                            PhoneNumber = "07096501269"
                        },
                        new
                        {
                            Id = 9L,
                            Age = 0,
                            CreatedBy = "Sheila_Moore29",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 834, DateTimeKind.Local).AddTicks(9461),
                            DateOfBirth = new DateTime(1994, 3, 6, 22, 55, 58, 228, DateTimeKind.Local).AddTicks(8607),
                            Email = "Sheila61@yahoo.com",
                            FirstName = "Samara",
                            Gender = "Male",
                            LastName = "White",
                            PhoneNumber = "07074918893"
                        },
                        new
                        {
                            Id = 10L,
                            Age = 0,
                            CreatedBy = "Elvira33",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 834, DateTimeKind.Local).AddTicks(9461),
                            DateOfBirth = new DateTime(1997, 4, 3, 6, 57, 44, 802, DateTimeKind.Local).AddTicks(3745),
                            Email = "Elvira.Grant@yahoo.com",
                            FirstName = "Mariam",
                            Gender = "Male",
                            LastName = "Miller",
                            PhoneNumber = "07038115492"
                        },
                        new
                        {
                            Id = 11L,
                            Age = 0,
                            CreatedBy = "Ebony.Beahan85",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 834, DateTimeKind.Local).AddTicks(9461),
                            DateOfBirth = new DateTime(2000, 5, 23, 8, 59, 39, 740, DateTimeKind.Local).AddTicks(6929),
                            Email = "Ebony.Beahan@hotmail.com",
                            FirstName = "Caroline",
                            Gender = "Male",
                            LastName = "Dicki",
                            PhoneNumber = "07098239305"
                        },
                        new
                        {
                            Id = 12L,
                            Age = 0,
                            CreatedBy = "Malcolm48",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 834, DateTimeKind.Local).AddTicks(9461),
                            DateOfBirth = new DateTime(1965, 6, 14, 1, 31, 22, 142, DateTimeKind.Local).AddTicks(4736),
                            Email = "Malcolm11@hotmail.com",
                            FirstName = "Christopher",
                            Gender = "Male",
                            LastName = "Mayer",
                            PhoneNumber = "07069758123"
                        },
                        new
                        {
                            Id = 13L,
                            Age = 0,
                            CreatedBy = "Henrietta71",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 834, DateTimeKind.Local).AddTicks(9461),
                            DateOfBirth = new DateTime(1967, 10, 4, 0, 57, 1, 510, DateTimeKind.Local).AddTicks(3536),
                            Email = "Henrietta.OConner3@hotmail.com",
                            FirstName = "Maritza",
                            Gender = "Female",
                            LastName = "Block",
                            PhoneNumber = "07096605242"
                        },
                        new
                        {
                            Id = 14L,
                            Age = 0,
                            CreatedBy = "Martin.Weissnat",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 834, DateTimeKind.Local).AddTicks(9461),
                            DateOfBirth = new DateTime(1993, 9, 6, 13, 6, 29, 961, DateTimeKind.Local).AddTicks(484),
                            Email = "Martin.Weissnat72@yahoo.com",
                            FirstName = "Oceane",
                            Gender = "Male",
                            LastName = "Strosin",
                            PhoneNumber = "07072690773"
                        },
                        new
                        {
                            Id = 15L,
                            Age = 0,
                            CreatedBy = "Nora_Goyette",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 834, DateTimeKind.Local).AddTicks(9461),
                            DateOfBirth = new DateTime(2001, 9, 1, 23, 43, 26, 698, DateTimeKind.Local).AddTicks(8859),
                            Email = "Nora15@yahoo.com",
                            FirstName = "Terry",
                            Gender = "Female",
                            LastName = "Bashirian",
                            PhoneNumber = "07082513283"
                        },
                        new
                        {
                            Id = 16L,
                            Age = 0,
                            CreatedBy = "Muriel76",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 834, DateTimeKind.Local).AddTicks(9461),
                            DateOfBirth = new DateTime(1955, 6, 30, 18, 40, 8, 476, DateTimeKind.Local).AddTicks(881),
                            Email = "Muriel.Leffler45@yahoo.com",
                            FirstName = "Alda",
                            Gender = "Female",
                            LastName = "Labadie",
                            PhoneNumber = "07029281945"
                        },
                        new
                        {
                            Id = 17L,
                            Age = 0,
                            CreatedBy = "Clark.Stehr35",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 834, DateTimeKind.Local).AddTicks(9461),
                            DateOfBirth = new DateTime(1976, 11, 16, 23, 32, 6, 586, DateTimeKind.Local).AddTicks(938),
                            Email = "Clark_Stehr57@yahoo.com",
                            FirstName = "Rosetta",
                            Gender = "Male",
                            LastName = "Satterfield",
                            PhoneNumber = "07064914760"
                        },
                        new
                        {
                            Id = 18L,
                            Age = 0,
                            CreatedBy = "Marion91",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 834, DateTimeKind.Local).AddTicks(9461),
                            DateOfBirth = new DateTime(1955, 9, 29, 14, 25, 47, 536, DateTimeKind.Local).AddTicks(8346),
                            Email = "Marion_Greenfelder@hotmail.com",
                            FirstName = "Emmalee",
                            Gender = "Male",
                            LastName = "Smith",
                            PhoneNumber = "07086697214"
                        },
                        new
                        {
                            Id = 19L,
                            Age = 0,
                            CreatedBy = "Myrtle.Purdy62",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 834, DateTimeKind.Local).AddTicks(9461),
                            DateOfBirth = new DateTime(1971, 9, 7, 6, 42, 53, 302, DateTimeKind.Local).AddTicks(3257),
                            Email = "Myrtle97@yahoo.com",
                            FirstName = "Dianna",
                            Gender = "Female",
                            LastName = "Cassin",
                            PhoneNumber = "07065404457"
                        },
                        new
                        {
                            Id = 20L,
                            Age = 0,
                            CreatedBy = "Mandy.Langosh50",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 834, DateTimeKind.Local).AddTicks(9461),
                            DateOfBirth = new DateTime(1953, 8, 21, 13, 31, 52, 563, DateTimeKind.Local).AddTicks(8829),
                            Email = "Mandy.Langosh@gmail.com",
                            FirstName = "Shany",
                            Gender = "Male",
                            LastName = "Runolfsson",
                            PhoneNumber = "07049199534"
                        });
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.TestBookings", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AvailableTestDayId")
                        .HasColumnType("bigint");

                    b.Property<string>("BookingReference")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BookingStatus")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("PatientId")
                        .HasColumnType("bigint");

                    b.Property<long>("VaccineTypeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AvailableTestDayId");

                    b.HasIndex("BookingReference");

                    b.HasIndex("PatientId");

                    b.HasIndex("VaccineTypeId");

                    b.ToTable("TestBookings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AvailableTestDayId = 3L,
                            BookingReference = "NWBIZMGOI5",
                            BookingStatus = "Booked",
                            CreatedBy = "Tommie.Jast",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 859, DateTimeKind.Local).AddTicks(5441),
                            PatientId = 2L,
                            VaccineTypeId = 2L
                        },
                        new
                        {
                            Id = 2L,
                            AvailableTestDayId = 4L,
                            BookingReference = "SGSZKHLF0W",
                            BookingStatus = "Booked",
                            CreatedBy = "Dean.Berge17",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 859, DateTimeKind.Local).AddTicks(5441),
                            PatientId = 2L,
                            VaccineTypeId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            AvailableTestDayId = 2L,
                            BookingReference = "F08156AENG",
                            BookingStatus = "Booked",
                            CreatedBy = "Phil_Hagenes",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 859, DateTimeKind.Local).AddTicks(5441),
                            PatientId = 4L,
                            VaccineTypeId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            AvailableTestDayId = 9L,
                            BookingReference = "EWLSWVS3Q4",
                            BookingStatus = "Booked",
                            CreatedBy = "Luz.Cormier",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 859, DateTimeKind.Local).AddTicks(5441),
                            PatientId = 6L,
                            VaccineTypeId = 2L
                        },
                        new
                        {
                            Id = 5L,
                            AvailableTestDayId = 9L,
                            BookingReference = "CSUVAF43R0",
                            BookingStatus = "Booked",
                            CreatedBy = "Sheldon75",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 859, DateTimeKind.Local).AddTicks(5441),
                            PatientId = 6L,
                            VaccineTypeId = 1L
                        });
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.TestLabs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LabName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("TestLocationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LabName");

                    b.HasIndex("TestLocationId");

                    b.ToTable("TestLabs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = "Teri43",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 933, DateTimeKind.Local).AddTicks(1679),
                            IsActive = true,
                            LabName = "Medbury Services Limited",
                            TestLocationId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = "Horace.Towne",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 933, DateTimeKind.Local).AddTicks(1679),
                            IsActive = true,
                            LabName = "Sahel Lab",
                            TestLocationId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = "Beulah.Schaefer65",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 933, DateTimeKind.Local).AddTicks(1679),
                            IsActive = true,
                            LabName = "Epiconsult clinic and Diagnostics Center",
                            TestLocationId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = "Kara_Lubowitz52",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 933, DateTimeKind.Local).AddTicks(1679),
                            IsActive = true,
                            LabName = "Centolab",
                            TestLocationId = 3L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedBy = "Alonzo.Stehr",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 933, DateTimeKind.Local).AddTicks(1679),
                            IsActive = true,
                            LabName = "A-Medik Molecular Laboratory",
                            TestLocationId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedBy = "Jacquelyn_Littel0",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 933, DateTimeKind.Local).AddTicks(1679),
                            IsActive = true,
                            LabName = "Cedarcrest Hospital Molecular Laboratory",
                            TestLocationId = 3L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedBy = "Charlie_Kuphal",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 933, DateTimeKind.Local).AddTicks(1679),
                            IsActive = true,
                            LabName = "Clina Lancet",
                            TestLocationId = 3L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedBy = "Jenny36",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 933, DateTimeKind.Local).AddTicks(1679),
                            IsActive = true,
                            LabName = "Biologix Support Services",
                            TestLocationId = 2L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedBy = "Jordan84",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 933, DateTimeKind.Local).AddTicks(1679),
                            IsActive = true,
                            LabName = "Clinix Healthcare",
                            TestLocationId = 1L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedBy = "Leroy.Dicki91",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 933, DateTimeKind.Local).AddTicks(1679),
                            IsActive = true,
                            LabName = "Reddington Zainelab",
                            TestLocationId = 2L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedBy = "Joan.Walsh",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 933, DateTimeKind.Local).AddTicks(1679),
                            IsActive = true,
                            LabName = "Medbury Services Limited",
                            TestLocationId = 3L
                        });
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.TestLocations", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsOperational")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("City");

                    b.ToTable("TestLocations");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            City = "Abuja",
                            Country = "Nigeria",
                            CreatedBy = "Laurence_Cormier",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 944, DateTimeKind.Local).AddTicks(4478),
                            IsOperational = true
                        },
                        new
                        {
                            Id = 2L,
                            City = "Lagos",
                            Country = "Nigeria",
                            CreatedBy = "Eleanor96",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 944, DateTimeKind.Local).AddTicks(4478),
                            IsOperational = true
                        },
                        new
                        {
                            Id = 3L,
                            City = "Port-harcourt",
                            Country = "Nigeria",
                            CreatedBy = "Hugh4",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 944, DateTimeKind.Local).AddTicks(4478),
                            IsOperational = true
                        });
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.VaccineTypes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecommendedAge")
                        .HasColumnType("int");

                    b.Property<long?>("TestLabsId")
                        .HasColumnType("bigint");

                    b.Property<int>("TotalSupplied")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("TestLabsId");

                    b.ToTable("VaccineTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = "Stephen94",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 954, DateTimeKind.Local).AddTicks(1398),
                            Description = "Lane connecting District Intuitive morph Sleek Cotton Salad communities Liberia port Polarised blockchains Wisconsin Licensed Plastic Computer foreground Awesome parsing Awesome Frozen Tuna Bedfordshire Dynamic Associate",
                            IsApproved = false,
                            Name = "Pfizer-BioNTech",
                            RecommendedAge = 5,
                            TotalSupplied = 691
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = "Michelle.Moore",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 954, DateTimeKind.Local).AddTicks(1398),
                            Description = "Steel Industrial HDD Bedfordshire Buckinghamshire incubate invoice Brand Sports, Kids & Music Street maroon Highway methodical Practical Wooden Sausages 24 hour Awesome Concrete Gloves Jewelery, Tools & Health Circle wireless teal",
                            IsApproved = true,
                            Name = "Moderna",
                            RecommendedAge = 18,
                            TotalSupplied = 527
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = "Mildred35",
                            CreatedOn = new DateTime(2021, 11, 30, 20, 16, 1, 954, DateTimeKind.Local).AddTicks(1398),
                            Description = "Intelligent Frozen Salad bandwidth Concrete Music, Kids & Movies analyzing Concrete Team-oriented Realigned feed user-centric circuit Bedfordshire Fantastic Cotton Car Practical Home Money Market Account paradigm cutting-edge Chief array",
                            IsApproved = false,
                            Name = "Johnson & Johnson’s",
                            RecommendedAge = 18,
                            TotalSupplied = 823
                        });
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.AvailableTestDays", b =>
                {
                    b.HasOne("Thynk.Covid19Pcr.Domain.Entities.TestLabs", "TestLab")
                        .WithMany("AvailableDays")
                        .HasForeignKey("TestLabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestLab");
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.TestBookings", b =>
                {
                    b.HasOne("Thynk.Covid19Pcr.Domain.Entities.AvailableTestDays", "AvailableTestDay")
                        .WithMany()
                        .HasForeignKey("AvailableTestDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Thynk.Covid19Pcr.Domain.Entities.Patients", "Patient")
                        .WithMany("TestBookings")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Thynk.Covid19Pcr.Domain.Entities.VaccineTypes", "VaccineType")
                        .WithMany()
                        .HasForeignKey("VaccineTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Thynk.Covid19Pcr.Domain.Entities.CovidTestResult", "TestResult", b1 =>
                        {
                            b1.Property<long>("TestBookingsId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("ResultType")
                                .HasColumnType("int");

                            b1.Property<DateTime>("TestResultDate")
                                .HasColumnType("datetime2");

                            b1.HasKey("TestBookingsId");

                            b1.ToTable("TestBookings");

                            b1.WithOwner()
                                .HasForeignKey("TestBookingsId");
                        });

                    b.Navigation("AvailableTestDay");

                    b.Navigation("Patient");

                    b.Navigation("TestResult");

                    b.Navigation("VaccineType");
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.TestLabs", b =>
                {
                    b.HasOne("Thynk.Covid19Pcr.Domain.Entities.TestLocations", "TestLocation")
                        .WithMany("LabsInLocation")
                        .HasForeignKey("TestLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestLocation");
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.VaccineTypes", b =>
                {
                    b.HasOne("Thynk.Covid19Pcr.Domain.Entities.TestLabs", null)
                        .WithMany("Vaccines")
                        .HasForeignKey("TestLabsId");
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.Patients", b =>
                {
                    b.Navigation("TestBookings");
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.TestLabs", b =>
                {
                    b.Navigation("AvailableDays");

                    b.Navigation("Vaccines");
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.TestLocations", b =>
                {
                    b.Navigation("LabsInLocation");
                });
#pragma warning restore 612, 618
        }
    }
}
