// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thynk.Covid19Pcr.Infrastructure.DbContexts;

namespace Thynk.Covid19Pcr.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211130203733_AddedCovidTestResult")]
    partial class AddedCovidTestResult
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.AvailableTestDays", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AvailableDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("OpenSlots")
                        .HasColumnType("int");

                    b.Property<long>("TestLabId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TestLabId");

                    b.ToTable("AvailableTestDays");

                    b.HasData(
                        new
                        {
                            Id = 2L,
                            AvailableDate = new DateTime(2021, 12, 1, 21, 37, 30, 944, DateTimeKind.Local).AddTicks(4473),
                            CreatedBy = "Caroline75",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 30, 954, DateTimeKind.Local).AddTicks(6729),
                            OpenSlots = 55,
                            TestLabId = 7L
                        },
                        new
                        {
                            Id = 3L,
                            AvailableDate = new DateTime(2021, 12, 1, 21, 37, 30, 944, DateTimeKind.Local).AddTicks(4473),
                            CreatedBy = "Alfredo7",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 30, 954, DateTimeKind.Local).AddTicks(6729),
                            OpenSlots = 50,
                            TestLabId = 10L
                        },
                        new
                        {
                            Id = 4L,
                            AvailableDate = new DateTime(2021, 12, 1, 21, 37, 30, 944, DateTimeKind.Local).AddTicks(4473),
                            CreatedBy = "Robin46",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 30, 954, DateTimeKind.Local).AddTicks(6729),
                            OpenSlots = 82,
                            TestLabId = 11L
                        },
                        new
                        {
                            Id = 5L,
                            AvailableDate = new DateTime(2021, 12, 1, 21, 37, 30, 944, DateTimeKind.Local).AddTicks(4473),
                            CreatedBy = "Melinda_Klein98",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 30, 954, DateTimeKind.Local).AddTicks(6729),
                            OpenSlots = 66,
                            TestLabId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            AvailableDate = new DateTime(2021, 12, 1, 21, 37, 30, 944, DateTimeKind.Local).AddTicks(4473),
                            CreatedBy = "Miriam17",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 30, 954, DateTimeKind.Local).AddTicks(6729),
                            OpenSlots = 80,
                            TestLabId = 9L
                        },
                        new
                        {
                            Id = 7L,
                            AvailableDate = new DateTime(2021, 12, 1, 21, 37, 30, 944, DateTimeKind.Local).AddTicks(4473),
                            CreatedBy = "Tiffany.Wolf75",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 30, 954, DateTimeKind.Local).AddTicks(6729),
                            OpenSlots = 82,
                            TestLabId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            AvailableDate = new DateTime(2021, 12, 1, 21, 37, 30, 944, DateTimeKind.Local).AddTicks(4473),
                            CreatedBy = "Lamar36",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 30, 954, DateTimeKind.Local).AddTicks(6729),
                            OpenSlots = 67,
                            TestLabId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            AvailableDate = new DateTime(2021, 12, 1, 21, 37, 30, 944, DateTimeKind.Local).AddTicks(4473),
                            CreatedBy = "Vicki9",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 30, 954, DateTimeKind.Local).AddTicks(6729),
                            OpenSlots = 92,
                            TestLabId = 10L
                        },
                        new
                        {
                            Id = 10L,
                            AvailableDate = new DateTime(2021, 12, 1, 21, 37, 30, 944, DateTimeKind.Local).AddTicks(4473),
                            CreatedBy = "Lucia.Schuster",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 30, 954, DateTimeKind.Local).AddTicks(6729),
                            OpenSlots = 58,
                            TestLabId = 8L
                        },
                        new
                        {
                            Id = 11L,
                            AvailableDate = new DateTime(2021, 12, 1, 21, 37, 30, 944, DateTimeKind.Local).AddTicks(4473),
                            CreatedBy = "Gilbert.Watsica",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 30, 954, DateTimeKind.Local).AddTicks(6729),
                            OpenSlots = 63,
                            TestLabId = 1L
                        });
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.Patients", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PhoneNumber", "Email");

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Age = 0,
                            CreatedBy = "Shane.Bergstrom",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 101, DateTimeKind.Local).AddTicks(1606),
                            DateOfBirth = new DateTime(1965, 9, 8, 9, 22, 51, 458, DateTimeKind.Local).AddTicks(576),
                            Email = "Shane.Bergstrom89@gmail.com",
                            FirstName = "Sylvia",
                            Gender = "Female",
                            LastName = "Buckridge",
                            PhoneNumber = "07077534069"
                        },
                        new
                        {
                            Id = 2L,
                            Age = 0,
                            CreatedBy = "Todd_Kulas",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 101, DateTimeKind.Local).AddTicks(1606),
                            DateOfBirth = new DateTime(1953, 9, 3, 13, 54, 36, 12, DateTimeKind.Local).AddTicks(7252),
                            Email = "Todd.Kulas29@gmail.com",
                            FirstName = "Marilou",
                            Gender = "Male",
                            LastName = "Huels",
                            PhoneNumber = "07059303463"
                        },
                        new
                        {
                            Id = 3L,
                            Age = 0,
                            CreatedBy = "Stella48",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 101, DateTimeKind.Local).AddTicks(1606),
                            DateOfBirth = new DateTime(1970, 5, 19, 2, 21, 32, 52, DateTimeKind.Local).AddTicks(9521),
                            Email = "Stella_Schamberger35@yahoo.com",
                            FirstName = "Mabelle",
                            Gender = "Male",
                            LastName = "O'Reilly",
                            PhoneNumber = "07056162897"
                        },
                        new
                        {
                            Id = 4L,
                            Age = 0,
                            CreatedBy = "Hugh.Schiller",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 101, DateTimeKind.Local).AddTicks(1606),
                            DateOfBirth = new DateTime(2000, 8, 5, 11, 49, 32, 894, DateTimeKind.Local).AddTicks(1393),
                            Email = "Hugh60@yahoo.com",
                            FirstName = "Everardo",
                            Gender = "Female",
                            LastName = "Klocko",
                            PhoneNumber = "07052882712"
                        },
                        new
                        {
                            Id = 5L,
                            Age = 0,
                            CreatedBy = "Sherri.Gutmann74",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 101, DateTimeKind.Local).AddTicks(1606),
                            DateOfBirth = new DateTime(1998, 7, 17, 2, 42, 40, 212, DateTimeKind.Local).AddTicks(315),
                            Email = "Sherri51@yahoo.com",
                            FirstName = "Malcolm",
                            Gender = "Male",
                            LastName = "Yundt",
                            PhoneNumber = "07019509071"
                        },
                        new
                        {
                            Id = 6L,
                            Age = 0,
                            CreatedBy = "Ollie96",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 101, DateTimeKind.Local).AddTicks(1606),
                            DateOfBirth = new DateTime(1957, 3, 10, 17, 41, 38, 609, DateTimeKind.Local).AddTicks(600),
                            Email = "Ollie_Reynolds@hotmail.com",
                            FirstName = "Casimer",
                            Gender = "Male",
                            LastName = "Simonis",
                            PhoneNumber = "07096978553"
                        },
                        new
                        {
                            Id = 7L,
                            Age = 0,
                            CreatedBy = "Janie_Murphy",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 101, DateTimeKind.Local).AddTicks(1606),
                            DateOfBirth = new DateTime(1999, 7, 4, 11, 30, 1, 260, DateTimeKind.Local).AddTicks(243),
                            Email = "Janie61@hotmail.com",
                            FirstName = "Everette",
                            Gender = "Female",
                            LastName = "Windler",
                            PhoneNumber = "07071477751"
                        },
                        new
                        {
                            Id = 8L,
                            Age = 0,
                            CreatedBy = "Michael_Franecki",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 101, DateTimeKind.Local).AddTicks(1606),
                            DateOfBirth = new DateTime(1962, 8, 5, 6, 50, 17, 947, DateTimeKind.Local).AddTicks(5481),
                            Email = "Michael.Franecki@gmail.com",
                            FirstName = "Tomas",
                            Gender = "Male",
                            LastName = "Kunze",
                            PhoneNumber = "07018591557"
                        },
                        new
                        {
                            Id = 9L,
                            Age = 0,
                            CreatedBy = "Lynn.Rodriguez",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 101, DateTimeKind.Local).AddTicks(1606),
                            DateOfBirth = new DateTime(1959, 1, 2, 0, 51, 1, 639, DateTimeKind.Local).AddTicks(9371),
                            Email = "Lynn32@hotmail.com",
                            FirstName = "Ahmad",
                            Gender = "Female",
                            LastName = "Rohan",
                            PhoneNumber = "07048696900"
                        },
                        new
                        {
                            Id = 10L,
                            Age = 0,
                            CreatedBy = "Miriam_Strosin",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 101, DateTimeKind.Local).AddTicks(1606),
                            DateOfBirth = new DateTime(1981, 6, 23, 3, 40, 45, 598, DateTimeKind.Local).AddTicks(8775),
                            Email = "Miriam_Strosin@hotmail.com",
                            FirstName = "Dudley",
                            Gender = "Female",
                            LastName = "King",
                            PhoneNumber = "07060659606"
                        },
                        new
                        {
                            Id = 11L,
                            Age = 0,
                            CreatedBy = "Domingo_McCullough",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 101, DateTimeKind.Local).AddTicks(1606),
                            DateOfBirth = new DateTime(1997, 7, 4, 1, 9, 58, 626, DateTimeKind.Local).AddTicks(5029),
                            Email = "Domingo.McCullough@gmail.com",
                            FirstName = "Evert",
                            Gender = "Female",
                            LastName = "Kreiger",
                            PhoneNumber = "07032905599"
                        },
                        new
                        {
                            Id = 12L,
                            Age = 0,
                            CreatedBy = "Harriet.Corwin",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 101, DateTimeKind.Local).AddTicks(1606),
                            DateOfBirth = new DateTime(1968, 6, 8, 8, 36, 4, 7, DateTimeKind.Local).AddTicks(1478),
                            Email = "Harriet28@hotmail.com",
                            FirstName = "Edythe",
                            Gender = "Female",
                            LastName = "Schneider",
                            PhoneNumber = "07028878985"
                        },
                        new
                        {
                            Id = 13L,
                            Age = 0,
                            CreatedBy = "Richard.Grady",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 101, DateTimeKind.Local).AddTicks(1606),
                            DateOfBirth = new DateTime(1991, 10, 27, 13, 3, 4, 319, DateTimeKind.Local).AddTicks(3751),
                            Email = "Richard_Grady1@hotmail.com",
                            FirstName = "Antone",
                            Gender = "Female",
                            LastName = "Jacobi",
                            PhoneNumber = "07061965703"
                        },
                        new
                        {
                            Id = 14L,
                            Age = 0,
                            CreatedBy = "Damon_MacGyver69",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 101, DateTimeKind.Local).AddTicks(1606),
                            DateOfBirth = new DateTime(1952, 7, 28, 0, 57, 44, 481, DateTimeKind.Local).AddTicks(4452),
                            Email = "Damon_MacGyver@yahoo.com",
                            FirstName = "Zackary",
                            Gender = "Male",
                            LastName = "Ortiz",
                            PhoneNumber = "07090492598"
                        },
                        new
                        {
                            Id = 15L,
                            Age = 0,
                            CreatedBy = "Brian65",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 101, DateTimeKind.Local).AddTicks(1606),
                            DateOfBirth = new DateTime(1985, 10, 19, 21, 15, 24, 420, DateTimeKind.Local).AddTicks(1716),
                            Email = "Brian34@hotmail.com",
                            FirstName = "Dorcas",
                            Gender = "Female",
                            LastName = "Collins",
                            PhoneNumber = "07083426360"
                        },
                        new
                        {
                            Id = 16L,
                            Age = 0,
                            CreatedBy = "Pablo63",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 101, DateTimeKind.Local).AddTicks(1606),
                            DateOfBirth = new DateTime(1988, 8, 31, 19, 43, 38, 277, DateTimeKind.Local).AddTicks(1184),
                            Email = "Pablo.Sanford69@gmail.com",
                            FirstName = "Vidal",
                            Gender = "Male",
                            LastName = "Weimann",
                            PhoneNumber = "07063057183"
                        },
                        new
                        {
                            Id = 17L,
                            Age = 0,
                            CreatedBy = "Julian37",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 101, DateTimeKind.Local).AddTicks(1606),
                            DateOfBirth = new DateTime(1984, 1, 21, 11, 37, 29, 702, DateTimeKind.Local).AddTicks(9652),
                            Email = "Julian.Johnston@hotmail.com",
                            FirstName = "Maude",
                            Gender = "Male",
                            LastName = "Homenick",
                            PhoneNumber = "07095316645"
                        },
                        new
                        {
                            Id = 18L,
                            Age = 0,
                            CreatedBy = "Elmer.Jones91",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 101, DateTimeKind.Local).AddTicks(1606),
                            DateOfBirth = new DateTime(1995, 9, 4, 6, 28, 7, 928, DateTimeKind.Local).AddTicks(1095),
                            Email = "Elmer.Jones@yahoo.com",
                            FirstName = "Jamir",
                            Gender = "Male",
                            LastName = "Cartwright",
                            PhoneNumber = "07010361595"
                        },
                        new
                        {
                            Id = 19L,
                            Age = 0,
                            CreatedBy = "Mamie.Bruen",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 101, DateTimeKind.Local).AddTicks(1606),
                            DateOfBirth = new DateTime(2001, 10, 14, 13, 9, 22, 337, DateTimeKind.Local).AddTicks(4644),
                            Email = "Mamie.Bruen75@gmail.com",
                            FirstName = "Lucius",
                            Gender = "Female",
                            LastName = "O'Conner",
                            PhoneNumber = "07035855513"
                        },
                        new
                        {
                            Id = 20L,
                            Age = 0,
                            CreatedBy = "Robyn.Tillman21",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 101, DateTimeKind.Local).AddTicks(1606),
                            DateOfBirth = new DateTime(1956, 6, 26, 21, 22, 35, 595, DateTimeKind.Local).AddTicks(821),
                            Email = "Robyn_Tillman77@gmail.com",
                            FirstName = "Kaitlin",
                            Gender = "Female",
                            LastName = "Heaney",
                            PhoneNumber = "07095178345"
                        });
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.TestBookings", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AvailableTestDayId")
                        .HasColumnType("bigint");

                    b.Property<string>("BookingReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BookingStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("PatientId")
                        .HasColumnType("bigint");

                    b.Property<long>("VaccineTypeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AvailableTestDayId");

                    b.HasIndex("BookingReference");

                    b.HasIndex("PatientId");

                    b.HasIndex("VaccineTypeId");

                    b.ToTable("TestBookings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AvailableTestDayId = 7L,
                            BookingReference = "7HU1EFFV0H",
                            BookingStatus = "Booked",
                            CreatedBy = "Joan_Littel",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 158, DateTimeKind.Local).AddTicks(2738),
                            PatientId = 4L,
                            VaccineTypeId = 3L
                        },
                        new
                        {
                            Id = 2L,
                            AvailableTestDayId = 9L,
                            BookingReference = "Y833IA8RA4",
                            BookingStatus = "Booked",
                            CreatedBy = "Eloise_Jacobi62",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 158, DateTimeKind.Local).AddTicks(2738),
                            PatientId = 5L,
                            VaccineTypeId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            AvailableTestDayId = 10L,
                            BookingReference = "H2YB8Z116G",
                            BookingStatus = "Booked",
                            CreatedBy = "Kathy_Gorczany91",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 158, DateTimeKind.Local).AddTicks(2738),
                            PatientId = 7L,
                            VaccineTypeId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            AvailableTestDayId = 6L,
                            BookingReference = "2VQ9B1JWHC",
                            BookingStatus = "Booked",
                            CreatedBy = "Shaun_Schneider40",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 158, DateTimeKind.Local).AddTicks(2738),
                            PatientId = 8L,
                            VaccineTypeId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            AvailableTestDayId = 9L,
                            BookingReference = "I8YJEL47X0",
                            BookingStatus = "Booked",
                            CreatedBy = "Della_Turcotte92",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 158, DateTimeKind.Local).AddTicks(2738),
                            PatientId = 6L,
                            VaccineTypeId = 1L
                        });
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.TestLabs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LabName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("TestLocationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LabName");

                    b.HasIndex("TestLocationId");

                    b.ToTable("TestLabs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = "Paul_Willms5",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 417, DateTimeKind.Local).AddTicks(7926),
                            IsActive = true,
                            LabName = "Medbury Services Limited",
                            TestLocationId = 2L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = "Glen37",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 417, DateTimeKind.Local).AddTicks(7926),
                            IsActive = true,
                            LabName = "Sahel Lab",
                            TestLocationId = 3L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = "Anna_Weber",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 417, DateTimeKind.Local).AddTicks(7926),
                            IsActive = true,
                            LabName = "Epiconsult clinic and Diagnostics Center",
                            TestLocationId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = "Courtney_Beer",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 417, DateTimeKind.Local).AddTicks(7926),
                            IsActive = true,
                            LabName = "Centolab",
                            TestLocationId = 3L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedBy = "Marguerite.Sauer88",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 417, DateTimeKind.Local).AddTicks(7926),
                            IsActive = true,
                            LabName = "A-Medik Molecular Laboratory",
                            TestLocationId = 3L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedBy = "Horace.Greenholt19",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 417, DateTimeKind.Local).AddTicks(7926),
                            IsActive = true,
                            LabName = "Cedarcrest Hospital Molecular Laboratory",
                            TestLocationId = 3L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedBy = "Krista47",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 417, DateTimeKind.Local).AddTicks(7926),
                            IsActive = true,
                            LabName = "Clina Lancet",
                            TestLocationId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedBy = "Barbara.Thiel95",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 417, DateTimeKind.Local).AddTicks(7926),
                            IsActive = true,
                            LabName = "Biologix Support Services",
                            TestLocationId = 3L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedBy = "Eileen_Wiza99",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 417, DateTimeKind.Local).AddTicks(7926),
                            IsActive = true,
                            LabName = "Clinix Healthcare",
                            TestLocationId = 3L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedBy = "Jessie.Bogan80",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 417, DateTimeKind.Local).AddTicks(7926),
                            IsActive = true,
                            LabName = "Reddington Zainelab",
                            TestLocationId = 2L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedBy = "Meredith.Shanahan",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 417, DateTimeKind.Local).AddTicks(7926),
                            IsActive = true,
                            LabName = "Medbury Services Limited",
                            TestLocationId = 1L
                        });
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.TestLocations", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsOperational")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("City");

                    b.ToTable("TestLocations");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            City = "Abuja",
                            Country = "Nigeria",
                            CreatedBy = "Angel_Nitzsche",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 454, DateTimeKind.Local).AddTicks(1777),
                            IsOperational = true
                        },
                        new
                        {
                            Id = 2L,
                            City = "Lagos",
                            Country = "Nigeria",
                            CreatedBy = "Kendra_Goyette88",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 454, DateTimeKind.Local).AddTicks(1777),
                            IsOperational = true
                        },
                        new
                        {
                            Id = 3L,
                            City = "Port-harcourt",
                            Country = "Nigeria",
                            CreatedBy = "Katherine.Johnston33",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 454, DateTimeKind.Local).AddTicks(1777),
                            IsOperational = true
                        });
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.VaccineTypes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecommendedAge")
                        .HasColumnType("int");

                    b.Property<long?>("TestLabsId")
                        .HasColumnType("bigint");

                    b.Property<int>("TotalSupplied")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("TestLabsId");

                    b.ToTable("VaccineTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = "Willis98",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 480, DateTimeKind.Local).AddTicks(6899),
                            Description = "Forest hack navigating payment Facilitator virtual hard drive cross-platform policy Games & Baby Roads Avon Manager internet solution Solutions adapter Checking Account Savings Account California neural",
                            IsApproved = false,
                            Name = "Pfizer-BioNTech",
                            RecommendedAge = 5,
                            TotalSupplied = 873
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = "Rochelle34",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 480, DateTimeKind.Local).AddTicks(6899),
                            Description = "Phased capacitor methodical Granite secured line interfaces Money Market Account Innovative Rubber empower Summit platforms didactic quantifying Berkshire compressing architect yellow payment context-sensitive",
                            IsApproved = false,
                            Name = "Moderna",
                            RecommendedAge = 18,
                            TotalSupplied = 564
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = "Mack.Mante64",
                            CreatedOn = new DateTime(2021, 11, 30, 21, 37, 31, 480, DateTimeKind.Local).AddTicks(6899),
                            Description = "reboot input fuchsia turn-key Baby metrics coherent payment Handcrafted synthesize complexity Trail matrix parse Internal parse Circles Electronics Generic deposit",
                            IsApproved = false,
                            Name = "Johnson & Johnson’s",
                            RecommendedAge = 18,
                            TotalSupplied = 549
                        });
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.AvailableTestDays", b =>
                {
                    b.HasOne("Thynk.Covid19Pcr.Domain.Entities.TestLabs", "TestLab")
                        .WithMany("AvailableDays")
                        .HasForeignKey("TestLabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestLab");
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.TestBookings", b =>
                {
                    b.HasOne("Thynk.Covid19Pcr.Domain.Entities.AvailableTestDays", "AvailableTestDay")
                        .WithMany()
                        .HasForeignKey("AvailableTestDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Thynk.Covid19Pcr.Domain.Entities.Patients", "Patient")
                        .WithMany("TestBookings")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Thynk.Covid19Pcr.Domain.Entities.VaccineTypes", "VaccineType")
                        .WithMany()
                        .HasForeignKey("VaccineTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Thynk.Covid19Pcr.Domain.Entities.CovidTestResult", "TestResult", b1 =>
                        {
                            b1.Property<long>("TestBookingsId")
                                .HasColumnType("bigint");

                            b1.Property<int>("ResultType")
                                .HasColumnType("int");

                            b1.Property<DateTime>("TestResultDate")
                                .HasColumnType("datetime2");

                            b1.HasKey("TestBookingsId");

                            b1.ToTable("CovidTestResult");

                            b1.WithOwner()
                                .HasForeignKey("TestBookingsId");
                        });

                    b.Navigation("AvailableTestDay");

                    b.Navigation("Patient");

                    b.Navigation("TestResult");

                    b.Navigation("VaccineType");
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.TestLabs", b =>
                {
                    b.HasOne("Thynk.Covid19Pcr.Domain.Entities.TestLocations", "TestLocation")
                        .WithMany("LabsInLocation")
                        .HasForeignKey("TestLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestLocation");
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.VaccineTypes", b =>
                {
                    b.HasOne("Thynk.Covid19Pcr.Domain.Entities.TestLabs", null)
                        .WithMany("Vaccines")
                        .HasForeignKey("TestLabsId");
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.Patients", b =>
                {
                    b.Navigation("TestBookings");
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.TestLabs", b =>
                {
                    b.Navigation("AvailableDays");

                    b.Navigation("Vaccines");
                });

            modelBuilder.Entity("Thynk.Covid19Pcr.Domain.Entities.TestLocations", b =>
                {
                    b.Navigation("LabsInLocation");
                });
#pragma warning restore 612, 618
        }
    }
}
